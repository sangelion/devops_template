#choose-mirror-bin mirror/http/proxy string
#d-i base-installer/kernel/override-image string linux-server
d-i time/zone string UTC
d-i clock-setup/utc boolean true
d-i clock-setup/utc-auto boolean true
#d-i finish-install/reboot_in_progress note
#d-i grub-installer/only_debian boolean true
#d-i grub-installer/with_other_os boolean true
#d-i partman-auto-lvm/guided_size string max
#d-i partman-auto/choose_recipe select atomic
#d-i partman-auto/method string lvm
#d-i partman-lvm/confirm boolean true
#d-i partman-lvm/confirm boolean true
#d-i partman-lvm/confirm_nooverwrite boolean true
#d-i partman-lvm/device_remove_lvm boolean true
#d-i partman/choose_partition select finish
#d-i partman/confirm boolean true
#d-i partman/confirm_nooverwrite boolean true
#d-i partman/confirm_write_new_label boolean true

#d-i pkgsel/include string openssh-server cryptsetup build-essential libssl-dev libreadline-dev zlib1g-dev linux-source dkms nfs-common
#d-i pkgsel/install-language-support boolean false
#d-i pkgsel/update-policy select none
#d-i pkgsel/upgrade select full-upgrade
#tasksel tasksel/first multiselect standard, ubuntu-server
#
#d-i console-setup/ask_detect boolean false
#d-i keyboard-configuration/layoutcode string us
#d-i keyboard-configuration/modelcode string pc105
#d-i debian-installer/locale string en_US

# Create vagrant user account.
d-i passwd/user-fullname string vagrant
d-i passwd/username string vagrant
d-i passwd/user-password password vagrant
d-i passwd/user-password-again password vagrant
d-i user-setup/allow-password-weak boolean true
d-i user-setup/encrypt-home boolean false
d-i passwd/user-default-groups vagrant sudo
d-i passwd/user-uid string 900

### Partitioning
## Partitioning example
# If the system has free space you can choose to only partition that space.
# This is only honoured if partman-auto/method (below) is not set.
#d-i partman-auto/init_automatically_partition select biggest_free

# Alternatively, you may specify a disk to partition. If the system has only
# one disk the installer will default to using that, but otherwise the device
# name must be given in traditional, non-devfs format (so e.g. /dev/hda or
# /dev/sda, and not e.g. /dev/discs/disc0/disc).
# For example, to use the first SCSI/SATA hard disk:
d-i partman-auto/disk string /dev/sda
# In addition, you'll need to specify the method to use.
# The presently available methods are:
# - regular: use the usual partition types for your architecture
# - lvm:     use LVM to partition the disk
# - crypto:  use LVM within an encrypted partition
d-i partman-auto/method string regular

# If one of the disks that are going to be automatically partitioned
# contains an old LVM configuration, the user will normally receive a
# warning. This can be preseeded away...
# d-i partman-lvm/device_remove_lvm boolean true
# The same applies to pre-existing software RAID array:
# d-i partman-md/device_remove_md boolean true
# And the same goes for the confirmation to write the lvm partitions.
# d-i partman-lvm/confirm boolean true

# You can choose one of the three predefined partitioning recipes:
# - atomic: all files in one partition
# - home:   separate /home partition
# - multi:  separate /home, /usr, /var, and /tmp partitions
#d-i partman-auto/choose_recipe select atomic

# Or provide a recipe of your own...
# If you have a way to get a recipe file into the d-i environment, you can
# just point at it.
#d-i partman-auto/expert_recipe_file string /hd-media/recipe

# If not, you can put an entire recipe into the preconfiguration file in one
# (logical) line. This example creates a small /boot partition, suitable
# swap, and uses the rest of the space for the root partition:
d-i partman-auto/expert_recipe string                         \
      boot-root ::                                            \
              500 10000 1000000000 btrfs                      \
                      $primary{ } $bootable{ }                \
                      method{ format } format{ }              \
                      use_filesystem{ } filesystem{ btrfs }   \
                      mountpoint{ / }                         \
              .                                               \
              64 512 300% linux-swap                          \
                      method{ swap } format{ }                \
              .

# The full recipe format is documented in the file partman-auto-recipe.txt
# included in the 'debian-installer' package or available from D-I source
# repository. This also documents how to specify settings such as file
# system labels, volume group names and which physical devices to include
# in a volume group.

# This makes partman automatically partition without confirmation, provided
# that you told it what to do using one of the methods above.

d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

d-i mirror/http/proxy string
d-i pkgsel/update-policy select none

#### Package selection
#tasksel	tasksel/force-tasks	string server
#tasksel tasksel/skip-tasks  string standard
tasksel tasksel/first multiselect standard
#d-i pkgsel/include string openssh-server build-essential htop mc software-properties-common python-apt python-pycurl python-setuptools
d-i pkgsel/include string openssh-server
#d-i pkgsel/upgrade select full-upgrade
#d-i pkgsel/language-packs multiselect
d-i finish-install/reboot_in_progress note

#
## Individual additional packages to install
## Whether to upgrade packages after debootstrap.
## Allowed values: none, safe-upgrade, full-upgrade
#
## Language pack selection
#d-i preseed/late_command string \
#    in-target sed -i 's/^%sudo.*/%sudo ALL=(ALL:ALL) NOPASSWD:ALL/g' /etc/sudoers

#d-i preseed/include string ../ubuntu/preseed.cfg
#
#d-i preseed/late_command string                                                   \
#        echo 'Defaults:vagrant !requiretty' > /target/etc/sudoers.d/vagrant;      \
#        echo 'vagrant ALL=(ALL) NOPASSWD: ALL' >> /target/etc/sudoers.d/vagrant;  \
#        chmod 440 /target/etc/sudoers.d/vagrant;                                  \
#        ln -sf /dev/null /target/etc/systemd/network/99-default.link;             \
#        in-target update-initramfs -
